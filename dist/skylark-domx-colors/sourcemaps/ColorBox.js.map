{"version":3,"sources":["ColorBox.js"],"names":["define","browser","noder","finder","$","eventer","styler","fx","plugins","popups","Color","colors","ColorPane","ColorBox","Plugin","inherit","klassName","pluginName","options","states","showPalette","showPaletteOnly","togglePaletteOnly","showSelectionPalette","showInput","allowEmpty","showButtons","showInitial","showAlpha","color","maxSelectionSize","preferredFormat","_updateUI","realColor","this","get","$previewElement","removeClass","css","stating","addClass","toHexString","realRgb","toRgbString","toString","pane","_applyOptions","opts","_states","_applyStates","reflow","_construct","elm","overrided","$el","$pane","find","instantiate","palette","selectionPalette","_init","self","listenTo","e","toggle","stopPropagation","target","is","preventDefault","revert","set","name","value","undefined","offset","calcOffset","_visible","hide","show","_flat","destroy","register","localization"],"mappings":"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","file":"../ColorBox.js","sourcesContent":["define([\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-domx-popups\",\r\n    \"skylark-graphics-color\",\r\n    \"./colors\",\r\n    \"./ColorPane\"\r\n   ],function(browser, noder, finder, $,eventer, styler,fx,plugins,popups,Color,colors,ColorPane) {\r\n    \"use strict\";\r\n\r\n    var ColorBox = plugins.Plugin.inherit({\r\n        klassName : \"ColorBox\",\r\n\r\n        pluginName : \"domx.colors.box\",\r\n\r\n        options : {\r\n            states : {\r\n                showPalette: false,\r\n                showPaletteOnly: false,\r\n                togglePaletteOnly: false,\r\n                showSelectionPalette: true,\r\n                showInput: false,\r\n                allowEmpty: false,\r\n                showButtons: true,\r\n                showInitial: false,\r\n                showAlpha: false\r\n            },\r\n\r\n            // Options\r\n            color: false,\r\n            maxSelectionSize: 7,\r\n            preferredFormat: false,\r\n        },\r\n\r\n        _updateUI : function () {\r\n            var realColor = this.get(),\r\n                displayColor = '';\r\n             //reset background info for preview element\r\n            this.$previewElement.removeClass(\"sp-clear-display\");\r\n            this.$previewElement.css('background-color', 'transparent');\r\n\r\n            if (!realColor && this.stating(\"allowEmpty\")) {\r\n                // Update the replaced elements background with icon indicating no color selection\r\n                this.$previewElement.addClass(\"sp-clear-display\");\r\n            }\r\n            else {\r\n                var realHex = realColor.toHexString(),\r\n                    realRgb = realColor.toRgbString();\r\n\r\n                // Update the replaced elements background color (with actual selected color)\r\n                this.$previewElement.css(\"background-color\", realRgb);\r\n\r\n                displayColor = realColor.toString();\r\n            }\r\n\r\n            this.pane._updateUI();\r\n        },\r\n\r\n\r\n        _applyOptions : function () {\r\n            var opts = this.options;\r\n\r\n            this._states = {\r\n                allowEmpty : opts.states.allowEmpty,\r\n                showInput : opts.states.showInput,\r\n                showAlpha : opts.states.showAlpha,\r\n                showButtons : opts.states.showButtons,\r\n                togglePaletteOnly : opts.states.togglePaletteOnly,\r\n                showPalette : opts.states.showPalette,\r\n                showPaletteOnly : opts.states.showPaletteOnly,\r\n                showSelectionPalette: opts.showSelectionPalette,\r\n                showInitial : opts.states.showInitial\r\n            };\r\n\r\n           this._applyStates();\r\n\r\n           this.reflow();\r\n        },\r\n\r\n         _construct: function(elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n            this.$el = this.$();\r\n\r\n            var opts = this.options,\r\n            \t$pane = this.$pane = $(opts.pane),\r\n                $previewElement = this.$previewElement = this.$el.find(\".sp-preview-inner\");\r\n\r\n\r\n            if ($pane[0]) {\r\n                this.pane = ColorPane.instantiate($pane[0],{\r\n                    color : opts.color,\r\n                    palette : opts.palette,\r\n                    selectionPalette : opts.selectionPalette,\r\n                    states : {\r\n\t\t                showPalette:  opts.states.showPalette,\r\n\t\t                showPaletteOnly: opts.states.showPaletteOnly,\r\n\t\t                togglePaletteOnly: opts.states.togglePaletteOnly,\r\n\t\t                showSelectionPalette : opts.states.showSelectionPalette,\r\n                        showInput: opts.states.showInput,\r\n                        allowEmpty: opts.states.allowEmpty,\r\n                        showButtons: opts.states.showButtons,\r\n                        showInitial: opts.states.showInitial,\r\n                        showAlpha: opts.states.showAlpha                                            \r\n                    }\r\n                })\r\n            } \r\n\r\n            this._init();\r\n\r\n        },\r\n\r\n        _init : function () {\r\n            var self = this,\r\n                opts = this.options;\r\n\r\n            this._applyOptions();\r\n\r\n            this.listenTo(this.$el,\"click touchstart\", function (e) {\r\n                //if (!disabled) {\r\n                    self.toggle();\r\n                //}\r\n\r\n                e.stopPropagation();\r\n\r\n                if (!$(e.target).is(\"input\")) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        revert :  function () {\r\n        \tthis.pane.revert();\r\n        },\r\n\r\n\r\n        get : function () {\r\n            return this.pane.get();\r\n        },\r\n\r\n\r\n        set : function (color) {\r\n        \tthis.pane.set(color);\r\n        },\r\n\r\n        _applyStates : function() {\r\n        },\r\n\r\n        stating : function(name,value) {\r\n            if (value !== undefined) {\r\n                this._states[name] = value;\r\n                this._applyStates();\r\n            } else {\r\n                return this._states[name];\r\n            }\r\n        },\r\n\r\n        reflow : function () {\r\n\r\n            this.$pane.css(\"position\", \"absolute\");\r\n            this.$pane.offset(popups.calcOffset(this.$pane[0], this.$el[0]));\r\n\r\n            this.pane.reflow();\r\n\r\n        },\r\n\r\n        toggle : function () {\r\n            if (this._visible) {\r\n                this.hide();\r\n            } else {\r\n                this.show();\r\n            }\r\n        },\r\n\r\n        show : function () {\r\n            if (this._visible) {\r\n                this.reflow();\r\n                return;\r\n            }\r\n            \r\n            this._visible = true;\r\n\r\n            //$(doc).on(\"keydown.ColorBox\", onkeydown);\r\n            //$(doc).on(\"click.ColorBox\", clickout);\r\n            //$(window).on(\"resize.ColorBox\", resize);\r\n            this.$el.addClass(\"sp-active\");\r\n            this.$pane.removeClass(\"sp-hidden\");\r\n\r\n            this.reflow();\r\n            \r\n            this._updateUI();\r\n\r\n            //this._drawInitial();\r\n            \r\n        },\r\n        hide : function () {\r\n            // Return if hiding is unnecessary\r\n            if (!this._visible || this._flat) { return; }\r\n            this._visible = false;\r\n\r\n            //$(doc).off(\"keydown.ColorBox\", onkeydown);\r\n            //$(doc).off(\"click.ColorBox\", clickout);\r\n            //$(window).off(\"resize.ColorBox\", resize);\r\n\r\n            this.$el.removeClass(\"sp-active\");\r\n            this.$pane.addClass(\"sp-hidden\");\r\n        },\r\n\r\n        destroy : function () {\r\n            ///this.$el.show();\r\n            ///this.$offsetElement.off(\"click.ColorBox touchstart.ColorBox\");\r\n            ///this.$container.remove();\r\n            ///this.$replacer.remove();\r\n            //pickers[spect.id] = null;\r\n        }\r\n\r\n    });\r\n\r\n\r\n    plugins.register(ColorBox);\r\n\r\n    ColorBox.localization = {};\r\n\r\n    return colors.ColorBox = ColorBox;\r\n\r\n});"]}